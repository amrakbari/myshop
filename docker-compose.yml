version: "3.9"

services:
  db:
    image: postgres:14.1
    container_name: postgres
    ports:
      - 5432:5432
    env_file:
      - .env

  rabbitmq:
    image: "rabbitmq:alpine"
    container_name: rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  django:
    build:
      context: .
      dockerfile: docker/production.Dockerfile
    container_name: django
    command: ./docker/web_entrypoint.sh
    env_file:
      - .env
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - rabbitmq
    restart: on-failure

  celery:
    build:
      context: .
      dockerfile: docker/production.Dockerfile
    # command: celery -A myshop.tasks worker -l info --without-gossip --without-mingle --without-heartbeat
    container_name: worker
    command: ./docker/celery_entrypoint.sh
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - db
      - rabbitmq
    restart: on-failure

  beats:
    build:
      context: .
      dockerfile: docker/production.Dockerfile
    # command: celery -A myshop.tasks beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    container_name: beats
    command: ./docker/beats_entrypoint.sh
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - db
      - rabbitmq
    restart: on-failure
